name: Build and Release

on:
  push:
    tags:
      - "v*" # Trigger on version tags, e.g., v1.0.0
  workflow_dispatch: # Allow manual triggering of the workflow

permissions:
  contents: write # Grant write permissions for releases

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            extension: ""
          - goos: linux
            goarch: arm64
            extension: ""
          - goos: windows
            goarch: amd64
            extension: ".exe"
          - goos: windows
            goarch: arm64
            extension: ".exe"
          - goos: darwin
            goarch: amd64
            extension: ""
          - goos: darwin
            goarch: arm64
            extension: ""

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21" # Using stable Go version

      - name: Download dependencies
        run: go mod download

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p dist
          go build -v -ldflags="-X 'main.Version=${{ github.ref_name }}'" -o "dist/nomi-cli-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.extension }}"

      - name: Create ZIP archive
        run: |
          cd dist
          zip "nomi-cli-${{ matrix.goos }}-${{ matrix.goarch }}.zip" "nomi-cli-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.extension }}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nomi-cli-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/*.zip
          retention-days: 1
          if-no-files-found: error

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir -p release
          find artifacts -name "*.zip" -exec cp {} release/ \;

      - name: Generate changelog
        id: changelog
        run: |
          echo "### Nomi CLI ${{ github.ref_name }}" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "#### Binary Checksums" >> CHANGELOG.md
          echo '```' >> CHANGELOG.md
          cd release && sha256sum *.zip >> ../CHANGELOG.md
          echo '```' >> CHANGELOG.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*.zip
          body_path: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
          generate_release_notes: true
